version: '3.8'

services:
  # MLflow Service
  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow_service
    container_name: mlflow-service
    ports:
      - "6001:6001"
    volumes:
      - ./mlruns:/app/mlruns # Persistent MLflow data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://0.0.0.0:6001 || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  # Flask Recommender Service
  recommender-service:
    build:
      context: .
      dockerfile: Dockerfile.recommendation_service
    container_name: recommender-service
    ports:
      - "8082:8082"
    environment:
      - SERVER_IP=mlflow-service # Service name for MLflow
      - KAFKA_PORT=9092
      - LOCAL_PORT=8082
    depends_on:
      mlflow:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  # Prometheus Monitoring Service
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/ # Prometheus config file location
      - ./prometheus-data:/prometheus # Persistent Prometheus data
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - app-network

  # Node Exporter (System Metrics)
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: nodeexporter
    ports:
      - "9100:9100"
    networks:
      - app-network

  # Grafana Visualization Service
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana # Persistent Grafana data
    environment:
      - GF_SECURITY_ADMIN_USER=admin # Default username
      - GF_SECURITY_ADMIN_PASSWORD=admin # Default password
    depends_on:
      prometheus:
        condition: service_started
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
